{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar PostLink = function PostLink(_ref) {\n  var show = _ref.show;\n  return __jsx(\"li\", {\n    className: \"jsx-453816165\"\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(show.id)\n  }, __jsx(\"a\", {\n    className: \"jsx-453816165\"\n  }, show.name)), __jsx(_JSXStyle, {\n    id: \"453816165\"\n  }, [\"a.jsx-453816165{font-family:'Arial';}\", \"ul.jsx-453816165{padding:0;}\", \"li.jsx-453816165{list-style:none;margin:5px 0;}\", \"a.jsx-453816165{-webkit-text-decoration:none;text-decoration:none;color:blue;}\", \"a.jsx-453816165:hover{opacity:0.6;}\"]));\n};\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", {\n    className: \"jsx-94950575\"\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    className: \"jsx-94950575\"\n  }, props.shows.map(function (show) {\n    return __jsx(PostLink, {\n      key: show.id,\n      show: show\n    });\n  })), __jsx(_JSXStyle, {\n    id: \"94950575\"\n  }, [\"h1.jsx-94950575{font-family:'Arial';}\"]));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}