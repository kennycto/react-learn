{"ast":null,"code":"var _jsxFileName = \"/Users/kennyto/TRIRIGA/training/learnNextJS/hello-next/pages/p/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/MyLayout';\n\nconst Post = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-1116472499\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, props.show.name), __jsx(\"div\", {\n  className: \"jsx-1116472499\" + \" \" + \"markdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(Markdown, {\n  source: `\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as well.\n\n### This is a title\n\nAnd here's the content.\n      `,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}), __jsx(\"p\", {\n  className: \"jsx-1116472499\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, props.show.summary.replace(/<[/]?[pb]>/g, '')), __jsx(\"img\", {\n  src: props.show.image.medium,\n  className: \"jsx-1116472499\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})), __jsx(_JSXStyle, {\n  id: \"1116472499\",\n  __self: this\n}, \".markdown{font-family:'Arial';}.markdown p{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown p:hover{opacity:0.6;}.markdown p{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rZW5ueXRvL1RSSVJJR0EvdHJhaW5pbmcvbGVhcm5OZXh0SlMvaGVsbG8tbmV4dC9wYWdlcy9wL1tpZF0uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUJ1QixBQUcrQixBQUlDLEFBS1QsQUFJSCxTQUNDLEdBSlosT0FLMkIsQ0FkM0Isd0JBZUEsTUFYYSxXQUNiIiwiZmlsZSI6Ii9Vc2Vycy9rZW5ueXRvL1RSSVJJR0EvdHJhaW5pbmcvbGVhcm5OZXh0SlMvaGVsbG8tbmV4dC9wYWdlcy9wL1tpZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9NeUxheW91dCc7XG5cbmNvbnN0IFBvc3QgPSBwcm9wcyA9PiAoXG4gIDxMYXlvdXQ+XG4gICAgPGgxPntwcm9wcy5zaG93Lm5hbWV9PC9oMT5cbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hcmtkb3duXCI+XG4gICAgPE1hcmtkb3duXG4gICAgICAgICAgc291cmNlPXtgXG5UaGlzIGlzIG91ciBibG9nIHBvc3QuXG5ZZXMuIFdlIGNhbiBoYXZlIGEgW2xpbmtdKC9saW5rKS5cbkFuZCB3ZSBjYW4gaGF2ZSBhIHRpdGxlIGFzIHdlbGwuXG5cbiMjIyBUaGlzIGlzIGEgdGl0bGVcblxuQW5kIGhlcmUncyB0aGUgY29udGVudC5cbiAgICAgIGB9XG4gICAgICAgIC8+XG4gICAgICA8cD57cHJvcHMuc2hvdy5zdW1tYXJ5LnJlcGxhY2UoLzxbL10/W3BiXT4vZywgJycpfTwvcD5cbiAgICAgIDxpbWcgc3JjPXtwcm9wcy5zaG93LmltYWdlLm1lZGl1bX0gLz5cbiAgICA8L2Rpdj5cbiAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICAubWFya2Rvd24ge1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1hcmtkb3duIHAge1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBjb2xvcjogYmx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tYXJrZG93biBwOmhvdmVyIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICAgIH1cblxuICAgICAgICAubWFya2Rvd24gcCB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICA8L0xheW91dD5cbik7XG5cblBvc3QuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oY29udGV4dCkge1xuICBjb25zdCB7aWR9ID0gY29udGV4dC5xdWVyeTtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2hvd3MvJHtpZH1gKTtcbiAgY29uc3Qgc2hvdyA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgY29uc29sZS5sb2coYEZldGNoZWQgc2hvdzogJHtzaG93Lm5hbWV9YCk7XG5cbiAgcmV0dXJuIHtzaG93fTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBvc3Q7Il19 */\\n/*@ sourceURL=/Users/kennyto/TRIRIGA/training/learnNextJS/hello-next/pages/p/[id].js */\"));\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n  console.log(`Fetched show: ${show.name}`);\n  return {\n    show\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/kennyto/TRIRIGA/training/learnNextJS/hello-next/pages/p/[id].js"],"names":["fetch","Layout","Post","props","show","name","summary","replace","image","medium","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADF,EAEE;AAAA,sCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,MAAC,QAAD;AACM,EAAA,MAAM,EAAG;;;;;;;;OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIF,KAAK,CAACC,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAZF,EAaE;AAAK,EAAA,GAAG,EAAEJ,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAbF,CAFF;AAAA;AAAA;AAAA,syEADF;;AAyCAP,IAAI,CAACQ,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAACC,IAAAA;AAAD,MAAOD,OAAO,CAACE,KAArB;AACA,QAAMC,GAAG,GAAG,MAAMd,KAAK,CAAE,gCAA+BY,EAAG,EAApC,CAAvB;AACA,QAAMR,IAAI,GAAG,MAAMU,GAAG,CAACC,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBb,IAAI,CAACC,IAAK,EAAvC;AAEA,SAAO;AAACD,IAAAA;AAAD,GAAP;AACD,CARD;;AAUA,eAAeF,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/MyLayout';\n\nconst Post = props => (\n  <Layout>\n    <h1>{props.show.name}</h1>\n    <div className=\"markdown\">\n    <Markdown\n          source={`\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as well.\n\n### This is a title\n\nAnd here's the content.\n      `}\n        />\n      <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n      <img src={props.show.image.medium} />\n    </div>\n    <style jsx global>{`\n        .markdown {\n          font-family: 'Arial';\n        }\n\n        .markdown p {\n          text-decoration: none;\n          color: blue;\n        }\n\n        .markdown p:hover {\n          opacity: 0.6;\n        }\n\n        .markdown p {\n          margin: 0;\n          padding: 0;\n          text-transform: uppercase;\n        }\n      `}</style>\n  </Layout>\n);\n\nPost.getInitialProps = async function(context) {\n  const {id} = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  console.log(`Fetched show: ${show.name}`);\n\n  return {show};\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}