{"ast":null,"code":"var _jsxFileName = \"/Users/kennyto/TRIRIGA/training/learnNextJS/hello-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst PostLink = ({\n  show\n}) => __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, show.name)));\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-1468407906\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  className: \"jsx-1468407906\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, props.shows.map(show => __jsx(PostLink, {\n  key: show.id,\n  show: show,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}))), __jsx(_JSXStyle, {\n  id: \"1468407906\",\n  __self: this\n}, \"h1.jsx-1468407906,a.jsx-1468407906{font-family:'Arial';}ul.jsx-1468407906{padding:0;}li.jsx-1468407906{list-style:none;margin:5px 0;}a.jsx-1468407906{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-1468407906:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rZW5ueXRvL1RSSVJJR0EvdHJhaW5pbmcvbGVhcm5OZXh0SlMvaGVsbG8tbmV4dC9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQmMsQUFJeUIsQUFJVixBQUlNLEFBS0ssQUFLVCxVQWJiLEVBY0EsSUFWYyxJQVJkLFNBU0EscUJBSVksV0FDWiIsImZpbGUiOiIvVXNlcnMva2Vubnl0by9UUklSSUdBL3RyYWluaW5nL2xlYXJuTmV4dEpTL2hlbGxvLW5leHQvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuXG5jb25zdCBQb3N0TGluayA9ICh7IHNob3cgfSkgPT4gKFxuXHQ8bGk+XG5cdCAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7c2hvdy5pZH1gfT5cblx0XHQ8YT57c2hvdy5uYW1lfTwvYT5cblx0ICA8L0xpbms+XG5cdDwvbGk+XG4gICk7XG5cbmNvbnN0IEluZGV4ID0gcHJvcHMgPT4gKFxuXHQ8TGF5b3V0PlxuXHRcdDxoMT5CYXRtYW4gVFYgU2hvd3M8L2gxPlxuXHRcdDx1bD5cblx0XHRcdHtwcm9wcy5zaG93cy5tYXAoc2hvdyA9PiAoXG5cdFx0XHRcdDxQb3N0TGluayBrZXk9e3Nob3cuaWR9IHNob3c9e3Nob3d9IC8+XG5cdFx0XHQpKX1cblx0XHQ8L3VsPlxuXHRcdDxzdHlsZSBqc3g+e2Bcblx0XHRcdGgxLFxuXHRcdFx0YSB7XG5cdFx0XHRcdGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuXHRcdFx0fVxuXHRcblx0XHRcdHVsIHtcblx0XHRcdFx0cGFkZGluZzogMDtcblx0XHRcdH1cblx0XG5cdFx0XHRsaSB7XG5cdFx0XHRcdGxpc3Qtc3R5bGU6IG5vbmU7XG5cdFx0XHRcdG1hcmdpbjogNXB4IDA7XG5cdFx0XHR9XG5cdFxuXHRcdFx0YSB7XG5cdFx0XHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0XHRcdFx0Y29sb3I6IGJsdWU7XG5cdFx0XHR9XG5cdFxuXHRcdFx0YTpob3ZlciB7XG5cdFx0XHRcdG9wYWNpdHk6IDAuNjtcblx0XHRcdH1cblx0XHRgfTwvc3R5bGU+XG5cdDwvTGF5b3V0PlxuKVxuXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbigpIHtcblx0Y29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJyk7XG5cdGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG5cdGNvbnNvbGUubG9nKGBTaG93IGRhdGEgZmV0Y2hlZC4gQ291bnQ6ICR7ZGF0YS5sZW5ndGh9YCk7XG5cdFxuXHRyZXR1cm4ge1xuXHRcdHNob3dzOiBkYXRhLm1hcChlbnRyeSA9PiBlbnRyeS5zaG93KVxuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEluZGV4OyJdfQ== */\\n/*@ sourceURL=/Users/kennyto/TRIRIGA/training/learnNextJS/hello-next/pages/index.js */\"));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/kennyto/TRIRIGA/training/learnNextJS/hello-next/pages/index.js"],"names":["Layout","Link","fetch","PostLink","show","id","name","Index","props","shows","map","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKA,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CADC,CADF,CADD;;AAQA,MAAMC,KAAK,GAAGC,KAAK,IAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACEA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBN,IAAI,IACpB,MAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,EAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADF,CAFD;AAAA;AAAA;AAAA,wvEADD;;AAmCAG,KAAK,CAACI,eAAN,GAAwB,kBAAiB;AACxC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMW,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACNR,IAAAA,KAAK,EAAEI,IAAI,CAACH,GAAL,CAASQ,KAAK,IAAIA,KAAK,CAACd,IAAxB;AADD,GAAP;AAGA,CATD;;AAWA,eAAeG,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst PostLink = ({ show }) => (\n\t<li>\n\t  <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n\t\t<a>{show.name}</a>\n\t  </Link>\n\t</li>\n  );\n\nconst Index = props => (\n\t<Layout>\n\t\t<h1>Batman TV Shows</h1>\n\t\t<ul>\n\t\t\t{props.shows.map(show => (\n\t\t\t\t<PostLink key={show.id} show={show} />\n\t\t\t))}\n\t\t</ul>\n\t\t<style jsx>{`\n\t\t\th1,\n\t\t\ta {\n\t\t\t\tfont-family: 'Arial';\n\t\t\t}\n\t\n\t\t\tul {\n\t\t\t\tpadding: 0;\n\t\t\t}\n\t\n\t\t\tli {\n\t\t\t\tlist-style: none;\n\t\t\t\tmargin: 5px 0;\n\t\t\t}\n\t\n\t\t\ta {\n\t\t\t\ttext-decoration: none;\n\t\t\t\tcolor: blue;\n\t\t\t}\n\t\n\t\t\ta:hover {\n\t\t\t\topacity: 0.6;\n\t\t\t}\n\t\t`}</style>\n\t</Layout>\n)\n\nIndex.getInitialProps = async function() {\n\tconst res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n\tconst data = await res.json();\n\n\tconsole.log(`Show data fetched. Count: ${data.length}`);\n\t\n\treturn {\n\t\tshows: data.map(entry => entry.show)\n\t}\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}